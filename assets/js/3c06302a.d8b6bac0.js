"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[988],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),g=i,f=u["".concat(c,".").concat(g)]||u[g]||d[g]||a;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},18352:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(87462),i=(n(67294),n(3905));const a={sidebar_position:2,title:"\u5feb\u901f\u5165\u95e8"},o=void 0,s={unversionedId:"oauth2-server/readme",id:"oauth2-server/readme",title:"\u5feb\u901f\u5165\u95e8",description:"\u534f\u8bae\u5b98\u65b9\u5b9a\u4e49\u6587\u6863",source:"@site/wiki/common-starter/oauth2-server/readme.md",sourceDirName:"oauth2-server",slug:"/oauth2-server/",permalink:"/common-starter/oauth2-server/",draft:!1,tags:[],version:"current",lastUpdatedBy:"yishuifengxiao",lastUpdatedAt:1676279828,formattedLastUpdatedAt:"2023\u5e742\u670813\u65e5",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"\u5feb\u901f\u5165\u95e8"},sidebar:"tutorialSidebar",previous:{title:"oauth2\u7b80\u4ecb",permalink:"/common-starter/oauth2-server/oauth2"},next:{title:"oauth2 resource",permalink:"/common-starter/category/oauth2-resource"}},c={},l=[{value:"\u4e00 \u52a0\u5165\u4f9d\u8d56",id:"\u4e00-\u52a0\u5165\u4f9d\u8d56",level:2},{value:"\u4e8c \u4ee3\u7801\u914d\u7f6e",id:"\u4e8c-\u4ee3\u7801\u914d\u7f6e",level:2},{value:"\u4e09 \u914d\u7f6e\u8ba4\u8bc1\u8d26\u53f7",id:"\u4e09-\u914d\u7f6e\u8ba4\u8bc1\u8d26\u53f7",level:2}],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u534f\u8bae\u5b98\u65b9\u5b9a\u4e49\u6587\u6863"),(0,i.kt)("p",null,"OAuth 2.0 Authorization Server Metadata ",(0,i.kt)("a",{parentName:"p",href:"https://www.rfc-editor.org/rfc/rfc8414#section-3"},"https://www.rfc-editor.org/rfc/rfc8414#section-3")),(0,i.kt)("p",null,"The OAuth 2.1 Authorization Framework ",(0,i.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/draft-ietf-oauth-v2-1-07#section-1.1"},"https://datatracker.ietf.org/doc/html/draft-ietf-oauth-v2-1-07#section-1.1")),(0,i.kt)("h2",{id:"\u4e00-\u52a0\u5165\u4f9d\u8d56"},"\u4e00 \u52a0\u5165\u4f9d\u8d56"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"}," \u8be5\u529f\u80fd\u57fa\u4e8e",(0,i.kt)("inlineCode",{parentName:"p"},"spring-security-oauth2-autoconfigure"),"\u6269\u5c55\u800c\u6765\uff0c\u5728\u5f53\u524d\u7248\u672c\u4e2d\uff0c\u6240\u6709\u6b64\u4f9d\u8d56\u529f\u80fd\u7684\u4ee3\u7801\u88ab\u6807\u6ce8\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"@Deprecated"),",\u65b0\u7248\u529f\u80fd\u53ef\u53c2\u89c1 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/spring-projects/spring-security/wiki/OAuth-2.0-Migration-Guide"},"https://github.com/spring-projects/spring-security/wiki/OAuth-2.0-Migration-Guide")," \uff0c\u4f46\u662f\u65b0\u7248\u9700\u8981\u8f83\u9ad8\u7248\u672c\u7684spring \uff0c\u4e0e\u8f83\u4f4e\u7248\u672c\u7684springboot\u4e0d\u80fd\u517c\u5bb9\uff0c\u6545\u6b64\u589e\u5f3a\u6269\u5c55\u7684\u76ee\u7684\u662f\u5728\u4f4e\u7248\u672c\u7684springboot\u4e0b\u80fd\u591f\u5141\u8bb8")),(0,i.kt)("p",null,"\u5728\u5f00\u542f\u6b64\u529f\u80fd\u65f6\u9700\u8981\u6309\u7167\u3010spring security \u6269\u5c55\u3011\u7ae0\u8282\u5b8c\u6210\u540espring securi\u76f8\u5173\u914d\u7f6e\uff0c\u7136\u540e\u5728\u9879\u76ee\u4e2d\u52a0\u5165\u4ee5\u4e0b\u4f9d\u8d56\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-properties"},"<oauth2.version>2.3.12.RELEASE</oauth2.version>\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.springframework.security.oauth.boot</groupId>\n    <artifactId>spring-security-oauth2-autoconfigure</artifactId>\n    <version>${oauth2.version}</version>\n</dependency>\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n")),(0,i.kt)("p",null,"\u7136\u540e\u5728\u9879\u76ee\u4e2d\u52a0\u5165\u4ee5\u4e0b\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@Configuration\npublic static class Oauth2Config extends AbstractOauth2Config {\n}\n")),(0,i.kt)("h2",{id:"\u4e8c-\u4ee3\u7801\u914d\u7f6e"},"\u4e8c \u4ee3\u7801\u914d\u7f6e"),(0,i.kt)("p",null,"\u5b8c\u6574\u7684\u5f00\u542f\u4ee3\u7801\u5982\u4e0b:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@Configuration\n@EnableWebSecurity\n@EnableResourceServer\n@EnableAuthorizationServer\npublic class SecurityCoreConfig extends AbstractSecurityConfig {\n\n    @Configuration\n    public static class Oauth2Config extends AbstractOauth2Config {\n    }\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6ce8\u610f\u4e00\u5b9a\u8981\u52a0\u4e0a",(0,i.kt)("inlineCode",{parentName:"strong"},"@EnableResourceServer"),"\u548c",(0,i.kt)("inlineCode",{parentName:"strong"},"@EnableAuthorizationServer"),"\u6ce8\u89e3\uff0c\u5426\u5219\u4e0a\u8ff0\u4ee3\u7801\u4f1a\u62a5\u9519")),(0,i.kt)("h2",{id:"\u4e09-\u914d\u7f6e\u8ba4\u8bc1\u8d26\u53f7"},"\u4e09 \u914d\u7f6e\u8ba4\u8bc1\u8d26\u53f7"),(0,i.kt)("p",null,"\u5b8c\u6210\u4e0a\u8ff0\u914d\u7f6e\u540e\uff0c\u5373\u53ef\u5f00\u542foauth2\u76f8\u5173\u529f\u80fd\uff0c\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7ec4\u4ef6\u8fdb\u884c\u4e00\u4e2a\u7f3a\u7701\u8ba4\u8bc1\u8d26\u53f7\u9a8c\u8bc1\u5b9e\u73b0\u3002\u5728\u7f3a\u7701\u5b9e\u73b0\u7684\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u80fd\u4f7f\u7528\u4efb\u610f\u7528\u6237\u540d\u914d\u5408\u5bc6\u7801(12345678)\u8fdb\u884c\u767b\u5f55\u3002"),(0,i.kt)("p",null,"\u6b64\u65f6\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u65f6\u95f4\u914d\u7f6e\u4e00\u4e2a\u81ea\u5b9a\u4e49\u8d26\u53f7\u8ba4\u8bc1\u5904\u7406\uff0c\u5728spring\u4e0a\u4e0b\u6587\u4e2d\u6ce8\u5165\u4e00\u4e2a\u540d\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"customClientDetailsService")," \u7684",(0,i.kt)("inlineCode",{parentName:"p"},"ClientDetailsService"),"\u7684\u5b9e\u4f8b\u5373\u53ef\u3002"),(0,i.kt)("p",null,"\u5b9e\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Component("customClientDetailsService")\npublic class ClientDetailsServiceImpl implements ClientDetailsService {\n    /**\n     * \u9ed8\u8ba4\u7684\u5141\u8bb8\u7684\u8ba4\u8bc1\u7c7b\u578b\n     */\n    private final static String DEFAULT_GRANT_TYPE = "password,authorization_code,refresh_token,implicit,client_credentials";\n    /**\n     * \u9ed8\u8ba4\u7684token\u6709\u6548\u65f6\u95f4,60\u5206\u949f\n     */\n    private final static int TOKEN_VALID_TIME = 60 * 60;\n    /**\n     * \u9ed8\u8ba4\u7684\u5237\u65b0token\u6709\u6548\u65f6\u95f4,\u9ed8\u8ba4\u4e3a12\u5c0f\u65f6\n     */\n    private final static int TOKEN_REDRESH_TIME = 60 * 60 * 12;\n    /**\n     * \u9ed8\u8ba4\u7684scope\n     */\n    private final static String DEFAULT_SCOPE = "read,write,trust";\n    /**\n     * \u9ed8\u8ba4\u540c\u610f\u7684\u81ea\u52a8\u6388\u6743\u57df\n     */\n    private final static String DEFAULT_APPROVE_SCOPE = "true";\n    /**\n     * \u9ed8\u8ba4\u7684\u6388\u6743\u673a\u6784\n     */\n    // private final static String DEFAULT_AUTHORITY =\n    // "ROLE_CLIENT,ROLE_TRUSTED_CLIENT";\n\n    private final static String DEFAULT_URL = "http://localhost:8080/";\n\n    private PasswordEncoder passwordEncoder;\n\n    @Override\n    public ClientDetails loadClientByClientId(String clientId) throws ClientRegistrationException {\n        // \u67e5\u8be2\u51fa\u5ba2\u6237\u7aef\n        BaseClientDetails clientDetails = new BaseClientDetails();\n\n        // @formatter:off\n\n        // \u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u6bcf\u4e00\u4e2a\u5ba2\u6237\u7aef(client); \u5728\u6ce8\u518c\u65f6\u5fc5\u987b\u586b\u5199(\u4e5f\u53ef\u7531\u670d\u52a1\u7aef\u81ea\u52a8\u751f\u6210).\n        // \u5bf9\u4e8e\u4e0d\u540c\u7684grant_type,\u8be5\u5b57\u6bb5\u90fd\u662f\u5fc5\u987b\u7684. \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u53e6\u4e00\u4e2a\u540d\u79f0\u53ebappKey,\u4e0eclient_id\u662f\u540c\u4e00\u4e2a\u6982\u5ff5.\n        clientDetails.setClientId(clientId);\n\n        // \u7528\u4e8e\u6307\u5b9a\u5ba2\u6237\u7aef(client)\u7684\u8bbf\u95ee\u5bc6\u5319; \u5728\u6ce8\u518c\u65f6\u5fc5\u987b\u586b\u5199(\u4e5f\u53ef\u7531\u670d\u52a1\u7aef\u81ea\u52a8\u751f\u6210).\n        // \u5bf9\u4e8e\u4e0d\u540c\u7684grant_type,\u8be5\u5b57\u6bb5\u90fd\u662f\u5fc5\u987b\u7684. \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u53e6\u4e00\u4e2a\u540d\u79f0\u53ebappSecret,\u4e0eclient_secret\u662f\u540c\u4e00\u4e2a\u6982\u5ff5.\n        // \u8fd9\u91cc\u662f\u52a0\u5bc6\u540e\u7684\u5bc6\u7801\n        clientDetails.setClientSecret(passwordEncoder.encode("12345678"));\n\n        // \u6307\u5b9a\u5ba2\u6237\u7aef\u652f\u6301\u7684grant_type,\u53ef\u9009\u503c\u5305\u62ecauthorization_code,password,refresh_token,implicit,client_credentials,\n        // \u82e5\u652f\u6301\u591a\u4e2agrant_type\u7528\u9017\u53f7(,)\u5206\u9694,\u5982: "authorization_code,password".\n        // \u5728\u5b9e\u9645\u5e94\u7528\u4e2d,\u5f53\u6ce8\u518c\u65f6,\u8be5\u5b57\u6bb5\u662f\u4e00\u822c\u7531\u670d\u52a1\u5668\u7aef\u6307\u5b9a\u7684,\u800c\u4e0d\u662f\u7531\u7533\u8bf7\u8005\u53bb\u9009\u62e9\u7684,\u6700\u5e38\u7528\u7684grant_type\u7ec4\u5408\u6709:\n        // "authorization_code,refresh_token"(\u9488\u5bf9\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee\u7684\u5ba2\u6237\u7aef);\n        // "password,refresh_token"(\u9488\u5bf9\u79fb\u52a8\u8bbe\u5907\u7684\u5ba2\u6237\u7aef).\n        // implicit\u4e0eclient_credentials\u5728\u5b9e\u9645\u4e2d\u5f88\u5c11\u4f7f\u7528.\n        clientDetails.setAuthorizedGrantTypes(\n                new HashSet<String>(Arrays.asList(StringUtils.splitByWholeSeparatorPreserveAllTokens(DEFAULT_GRANT_TYPE,\n                        ","))));\n\n        // \u5ba2\u6237\u7aef\u7684\u91cd\u5b9a\u5411URI,\u53ef\u4e3a\u7a7a, \u5f53grant_type\u4e3aauthorization_code\u6216implicit\u65f6,\n        // \u5728Oauth\u7684\u6d41\u7a0b\u4e2d\u4f1a\u4f7f\u7528\u5e76\u68c0\u67e5\u4e0e\u6ce8\u518c\u65f6\u586b\u5199\u7684redirect_uri\u662f\u5426\u4e00\u81f4\n        String[] urls = { DEFAULT_URL };\n        \n        \n        clientDetails.setRegisteredRedirectUri(new HashSet<String>(Arrays.asList(urls)));\n\n        // \u6307\u5b9a\u5ba2\u6237\u7aef\u6240\u62e5\u6709\u7684Spring Security\u7684\u6743\u9650\u503c,\u53ef\u9009, \u82e5\u6709\u591a\u4e2a\u6743\u9650\u503c,\u7528\u9017\u53f7(,)\u5206\u9694, \u5982: "ROLE_UNITY,ROLE_USER".\n        // \u5bf9\u4e8e\u662f\u5426\u8981\u8bbe\u7f6e\u8be5\u5b57\u6bb5\u7684\u503c,\u8981\u6839\u636e\u4e0d\u540c\u7684grant_type\u6765\u5224\u65ad,\n        // \u82e5\u5ba2\u6237\u7aef\u5728Oauth\u6d41\u7a0b\u4e2d\u9700\u8981\u7528\u6237\u7684\u7528\u6237\u540d(username)\u4e0e\u5bc6\u7801(password)\u7684(authorization_code,password),\n        // \u5219\u8be5\u5b57\u6bb5\u53ef\u4ee5\u4e0d\u9700\u8981\u8bbe\u7f6e\u503c,\u56e0\u4e3a\u670d\u52a1\u7aef\u5c06\u6839\u636e\u7528\u6237\u5728\u670d\u52a1\u7aef\u6240\u62e5\u6709\u7684\u6743\u9650\u6765\u5224\u65ad\u662f\u5426\u6709\u6743\u9650\u8bbf\u95ee\u5bf9\u5e94\u7684API.\n        // \u4f46\u5982\u679c\u5ba2\u6237\u7aef\u5728Oauth\u6d41\u7a0b\u4e2d\u4e0d\u9700\u8981\u7528\u6237\u4fe1\u606f\u7684(implicit,client_credentials),\n        // \u5219\u8be5\u5b57\u6bb5\u5fc5\u987b\u8981\u8bbe\u7f6e\u5bf9\u5e94\u7684\u6743\u9650\u503c, \u56e0\u4e3a\u670d\u52a1\u7aef\u5c06\u6839\u636e\u8be5\u5b57\u6bb5\u503c\u7684\u6743\u9650\u6765\u5224\u65ad\u662f\u5426\u6709\u6743\u9650\u8bbf\u95ee\u5bf9\u5e94\u7684API.\n        //clientDetails.setAuthorities(AuthorityUtils.createAuthorityList(\n        //      StringUtils.isBlank(client.getAuthorities()) ? DEFAULT_AUTHORITY : client.getAuthorities()));\n        clientDetails.setAuthorities(AuthorityUtils.createAuthorityList("ROLE_USER"));\n\n        // \u6307\u5b9a\u5ba2\u6237\u7aef\u7533\u8bf7\u7684\u6743\u9650\u8303\u56f4,\u53ef\u9009\u503c\u5305\u62ecread,write,trust;\u82e5\u6709\u591a\u4e2a\u6743\u9650\u8303\u56f4\u7528\u9017\u53f7(,)\u5206\u9694,\u5982: "read,write".\n        // scope\u7684\u503c\u4e0esecurity.xml\u4e2d\u914d\u7f6e\u7684\u2039intercept-url\u7684access\u5c5e\u6027\u6709\u5173\u7cfb. \u5982\u2039intercept-url\u7684\u914d\u7f6e\u4e3a\n        // \u2039intercept-url pattern="/m/**" access="ROLE_MOBILE,SCOPE_READ"/>\n        // \u5219\u8bf4\u660e\u8bbf\u95ee\u8be5URL\u65f6\u7684\u5ba2\u6237\u7aef\u5fc5\u987b\u6709read\u6743\u9650\u8303\u56f4. write\u7684\u914d\u7f6e\u503c\u4e3aSCOPE_WRITE, trust\u7684\u914d\u7f6e\u503c\u4e3aSCOPE_TRUST.\n        // \u5728\u5b9e\u9645\u5e94\u8be5\u4e2d, \u8be5\u503c\u4e00\u822c\u7531\u670d\u52a1\u7aef\u6307\u5b9a, \u5e38\u7528\u7684\u503c\u4e3aread,write.\n        clientDetails.setScope(Arrays.asList(StringUtils.splitByWholeSeparatorPreserveAllTokens(DEFAULT_SCOPE,",")));\n\n        // \u8bbe\u7f6e\u7528\u6237\u662f\u5426\u81ea\u52a8Approval\u64cd\u4f5c, \u9ed8\u8ba4\u503c\u4e3a \'false\', \u53ef\u9009\u503c\u5305\u62ec \'true\',\'false\', \'read\',\'write\'.\n        // \u8be5\u5b57\u6bb5\u53ea\u9002\u7528\u4e8egrant_type="authorization_code"\u7684\u60c5\u51b5,\u5f53\u7528\u6237\u767b\u5f55\u6210\u529f\u540e,\u82e5\u8be5\u503c\u4e3a\'true\'\u6216\u652f\u6301\u7684scope\u503c,\u5219\u4f1a\u8df3\u8fc7\u7528\u6237Approve\u7684\u9875\u9762,\n        // \u76f4\u63a5\u6388\u6743.\n        // \u8be5\u5b57\u6bb5\u4e0e trusted \u6709\u7c7b\u4f3c\u7684\u529f\u80fd, \u662f spring-security-oauth2 \u7684 2.0 \u7248\u672c\u540e\u6dfb\u52a0\u7684\u65b0\u5c5e\u6027.\n        clientDetails.setAutoApproveScopes(new HashSet<String>(Arrays.asList(DEFAULT_APPROVE_SCOPE)));\n\n        // \u8bbe\u5b9a\u5ba2\u6237\u7aef\u7684refresh_token\u7684\u6709\u6548\u65f6\u95f4\u503c(\u5355\u4f4d:\u79d2),\u53ef\u9009, \u82e5\u4e0d\u8bbe\u5b9a\u503c\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684\u6709\u6548\u65f6\u95f4\u503c(60 * 60 * 24 * 30, 30\u5929).\n        // \u82e5\u5ba2\u6237\u7aef\u7684grant_type\u4e0d\u5305\u62ecrefresh_token,\u5219\u4e0d\u7528\u5173\u5fc3\u8be5\u5b57\u6bb5 \u5728\u9879\u76ee\u4e2d,\n        // \u53ef\u5177\u4f53\u53c2\u8003DefaultTokenServices.java\u4e2d\u5c5e\u6027refreshTokenValiditySeconds.\n\n        // \u5728\u5b9e\u9645\u5e94\u7528\u4e2d, \u8be5\u503c\u4e00\u822c\u662f\u7531\u670d\u52a1\u7aef\u5904\u7406\u7684, \u4e0d\u9700\u8981\u5ba2\u6237\u7aef\u81ea\u5b9a\u4e49.\n        clientDetails.setRefreshTokenValiditySeconds(TOKEN_VALID_TIME);\n\n        // \u8bbe\u5b9a\u5ba2\u6237\u7aef\u7684access_token\u7684\u6709\u6548\u65f6\u95f4\u503c(\u5355\u4f4d:\u79d2),\u53ef\u9009, \u82e5\u4e0d\u8bbe\u5b9a\u503c\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684\u6709\u6548\u65f6\u95f4\u503c(60 * 60 * 12, 12\u5c0f\u65f6).\n        // \u5728\u670d\u52a1\u7aef\u83b7\u53d6\u7684access_token JSON\u6570\u636e\u4e2d\u7684expires_in\u5b57\u6bb5\u7684\u503c\u5373\u4e3a\u5f53\u524daccess_token\u7684\u6709\u6548\u65f6\u95f4\u503c.\n        // \u5728\u9879\u76ee\u4e2d, \u53ef\u5177\u4f53\u53c2\u8003DefaultTokenServices.java\u4e2d\u5c5e\u6027accessTokenValiditySeconds\n        clientDetails.setAccessTokenValiditySeconds(TOKEN_REDRESH_TIME);\n\n        // @formatter:on\n        return clientDetails;\n    }\n\n    public PasswordEncoder getPasswordEncoder() {\n        return passwordEncoder;\n    }\n\n    public void setPasswordEncoder(PasswordEncoder passwordEncoder) {\n        this.passwordEncoder = passwordEncoder;\n    }\n\n    @Override\n    public String toString() {\n        return "ClientDetailsServiceImpl [passwordEncoder=" + passwordEncoder + "]";\n    }\n\n}\n')))}d.isMDXComponent=!0}}]);