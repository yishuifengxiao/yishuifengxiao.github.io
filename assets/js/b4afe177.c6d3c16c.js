"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4170],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(n),g=i,m=c["".concat(p,".").concat(g)]||c[g]||d[g]||a;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=g;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},18212:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(87462),i=(n(67294),n(3905));const a={sidebar_position:2,title:"\u7b2c\u4e09\u65b9\u767b\u5f55"},o=void 0,s={unversionedId:"sso/readme",id:"sso/readme",title:"\u7b2c\u4e09\u65b9\u767b\u5f55",description:"\u4f7f\u7528 spring social \u529f\u80fd\u9996\u5148\u9700\u8981\u6309\u7167 \u5b89\u5168\u7ba1\u7406  \u4e2d\u7684\u6b65\u9aa4\u5f00\u542f spring security \u7684\u76f8\u5173\u529f\u80fd\u3002",source:"@site/wiki/common-starter/sso/readme.md",sourceDirName:"sso",slug:"/sso/",permalink:"/common-starter/sso/",draft:!1,tags:[],version:"current",lastUpdatedBy:"yishuifengxiao",lastUpdatedAt:1676364990,formattedLastUpdatedAt:"2023\u5e742\u670814\u65e5",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"\u7b2c\u4e09\u65b9\u767b\u5f55"},sidebar:"tutorialSidebar",previous:{title:"oauth2Login",permalink:"/common-starter/category/oauth2login"},next:{title:"\u52a8\u6001\u6743\u9650",permalink:"/common-starter/sso/pre_oauth"}},p={},l=[{value:"1 \u52a0\u5165\u4f9d\u8d56",id:"1-\u52a0\u5165\u4f9d\u8d56",level:2},{value:"2 \u81ea\u5b9a\u4e49QQUserInfo\u5b9e\u73b0OAuth2User\u63a5\u53e3",id:"2-\u81ea\u5b9a\u4e49qquserinfo\u5b9e\u73b0oauth2user\u63a5\u53e3",level:2},{value:"3 \u6dfb\u52a0RestTamplate\u89e3\u6790\u6a21\u677f",id:"3-\u6dfb\u52a0resttamplate\u89e3\u6790\u6a21\u677f",level:2},{value:"4 \u5b9e\u73b0OAuth2AccessTokenResponseClient",id:"4-\u5b9e\u73b0oauth2accesstokenresponseclient",level:2},{value:"5 \u5b9e\u73b0OAuth2UserService\u63a5\u53e3",id:"5-\u5b9e\u73b0oauth2userservice\u63a5\u53e3",level:2},{value:"6 \u591a\u4e2aOAuth2\u670d\u52a1\u63d0\u4f9b\u5546\u5e76\u5b58",id:"6-\u591a\u4e2aoauth2\u670d\u52a1\u63d0\u4f9b\u5546\u5e76\u5b58",level:2},{value:"7 \u9ad8\u7ea7\u914d\u7f6e",id:"7-\u9ad8\u7ea7\u914d\u7f6e",level:2},{value:"7.1 OAuth 2.0 Login Page",id:"71-oauth-20-login-page",level:3},{value:"7.2 Redirection Endpoint",id:"72-redirection-endpoint",level:3},{value:"8 \u914d\u7f6e\u5c5e\u6027",id:"8-\u914d\u7f6e\u5c5e\u6027",level:2},{value:"9 \u81ea\u5b9a\u4e49\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u767b\u5f55\u793a\u4f8b",id:"9-\u81ea\u5b9a\u4e49\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u767b\u5f55\u793a\u4f8b",level:2}],u={toc:l},c="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u4f7f\u7528 spring social \u529f\u80fd\u9996\u5148\u9700\u8981\u6309\u7167 ",(0,i.kt)("a",{parentName:"p",href:"security.html"},"\u5b89\u5168\u7ba1\u7406"),"  \u4e2d\u7684\u6b65\u9aa4\u5f00\u542f spring security \u7684\u76f8\u5173\u529f\u80fd\u3002"),(0,i.kt)("h2",{id:"1-\u52a0\u5165\u4f9d\u8d56"},"1 \u52a0\u5165\u4f9d\u8d56"),(0,i.kt)("p",null,"1 \u5728\u9879\u76ee\u7684 pom \u91cc\u589e\u52a0 \u76f8\u5173\u7684\u4f9d\u8d56"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-oauth2-client</artifactId>\n        </dependency>\n        <dependency>\n    <groupId>org.springframework.security</groupId>\n    <artifactId>spring-security-oauth2-jose</artifactId>\n</dependency>\n")),(0,i.kt)("h2",{id:"2-\u81ea\u5b9a\u4e49qquserinfo\u5b9e\u73b0oauth2user\u63a5\u53e3"},"2 \u81ea\u5b9a\u4e49QQUserInfo\u5b9e\u73b0OAuth2User\u63a5\u53e3"),(0,i.kt)("p",null,"QQ\u7528\u6237\u4fe1\u606f\u65e0\u6cd5\u4f7f\u7528\u9ed8\u8ba4\u7684DefaultOAuth2User\u8868\u793a\uff0c\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684QQUserInfo\u7c7b\u5e76\u5b9e\u73b0OAuth2User\u63a5\u53e3\uff1a"),(0,i.kt)("p",null,"public class QQUserInfo implements OAuth2User {"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'package com.yishuifengxiao.common.social.qq;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\nimport org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.authority.AuthorityUtils;\nimport org.springframework.security.oauth2.core.user.OAuth2User;\n\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\npublic class QQUserInfo implements OAuth2User {\n\n    /**\n     * \u7edf\u4e00\u8d4b\u4e88USER\u89d2\u8272\n     */\n    private List<GrantedAuthority> authorities = AuthorityUtils.createAuthorityList("ROLE_USER");\n\n    private Map<String, Object> attributes;\n\n    private String nickname;\n\n    @JsonProperty("figureurl")\n    private String figureUrl30;\n\n    @JsonProperty("figureurl_1")\n    private String figureUrl50;\n\n    @JsonProperty("figureurl_2")\n    private String figureUrl100;\n\n    @JsonProperty("figureurl_qq_1")\n    private String qqFigureUrl40;\n\n    @JsonProperty("figureurl_qq_2")\n    private String qqFigureUrl100;\n\n    private String gender;\n    /**\n     * \u643a\u5e26openId\u5907\u7528\n     */\n    private String openId;\n\n    @Override\n    public Collection<? extends GrantedAuthority> getAuthorities() {\n        return this.authorities;\n    }\n\n    @Override\n    public Map<String, Object> getAttributes() {\n        if (this.attributes == null) {\n            this.attributes = new HashMap<>();\n            this.attributes.put("nickname", this.getNickname());\n            this.attributes.put("figureUrl30", this.getFigureUrl30());\n            this.attributes.put("figureUrl50", this.getFigureUrl50());\n            this.attributes.put("figureUrl100", this.getFigureUrl100());\n            this.attributes.put("qqFigureUrl40", this.getQqFigureUrl40());\n            this.attributes.put("qqFigureUrl100", this.getQqFigureUrl100());\n            this.attributes.put("gender", this.getGender());\n            this.attributes.put("openId", this.getOpenId());\n        }\n        return attributes;\n    }\n\n    @Override\n    public String getName() {\n        return this.nickname;\n    }\n\n\n}\n')),(0,i.kt)("h2",{id:"3-\u6dfb\u52a0resttamplate\u89e3\u6790\u6a21\u677f"},"3 \u6dfb\u52a0RestTamplate\u89e3\u6790\u6a21\u677f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"package com.yishuifengxiao.common.social.util;\n\nimport org.springframework.http.MediaType;\nimport org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class JacksonFromTextHtmlHttpMessageConverter extends MappingJackson2HttpMessageConverter {\n\n    // \u6dfb\u52a0\u5bf9text/html\u7684\u652f\u6301\n    public JacksonFromTextHtmlHttpMessageConverter() {\n        List<MediaType> mediaTypes = new ArrayList<>();\n        mediaTypes.add(MediaType.TEXT_HTML);\n        setSupportedMediaTypes(mediaTypes);\n    }\n\n}\n")),(0,i.kt)("p",null,"\u7531\u4e8e\u4e0eQQ\u63a5\u53e3\u7684\u4ea4\u4e92\u4e0a\uff0c\u54cd\u5e94\u7c7b\u578b\u90fd\u4e3atext/html\u7684\u5f62\u5f0f\uff0c\u4e14RestTemplate\u6ca1\u6709\u9ed8\u8ba4\u652f\u6301\u8be5\u89e3\u6790\u6a21\u578b\uff0c\u6240\u4ee5\u5e94\u5f53\u81ea\u884c\u6dfb\u52a0\u3002"),(0,i.kt)("p",null,"\u4e3b\u8981\u662f\u4e24\u7c7b\uff0c\u4e00\u7c7btext/html\u8f6c\u666e\u901a\u6587\u672c\uff0c\u4e00\u7c7b\u5219\u662ftext/html\u8f6cJSON\u5bf9\u8c61\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'package com.yishuifengxiao.common.social.util;\n\nimport org.springframework.http.HttpInputMessage;\nimport org.springframework.http.HttpOutputMessage;\nimport org.springframework.http.MediaType;\nimport org.springframework.http.converter.AbstractHttpMessageConverter;\nimport org.springframework.http.converter.HttpMessageNotReadableException;\nimport org.springframework.http.converter.HttpMessageNotWritableException;\nimport org.springframework.util.StreamUtils;\n\nimport java.io.IOException;\nimport java.nio.charset.Charset;\n\n/**\n * \u7531\u4e8e\u4e0eQQ\u63a5\u53e3\u7684\u4ea4\u4e92\u4e0a\uff0c\u54cd\u5e94\u7c7b\u578b\u90fd\u4e3atext/html\u7684\u5f62\u5f0f\uff0c\u4e14RestTemplate\u6ca1\u6709\u9ed8\u8ba4\u652f\u6301\u8be5\u89e3\u6790\u6a21\u578b\uff0c\u6240\u4ee5\u5e94\u5f53\u81ea\u884c\u6dfb\u52a0\u3002\n * \u4e3b\u8981\u662f\u4e24\u7c7b\uff0c\u4e00\u7c7btext/html\u8f6c\u666e\u901a\u6587\u672c\uff0c\u4e00\u7c7b\u5219\u662ftext/html\u8f6cJSON\u5bf9\u8c61\u3002\n */\n@SuppressWarnings("rawtypes")\npublic class TextHtmlHttpMessageConverter extends AbstractHttpMessageConverter {\n\n\n    public TextHtmlHttpMessageConverter() {\n        super(Charset.forName("UTF-8"), new MediaType[]{MediaType.TEXT_HTML});\n    }\n\n    @Override\n    protected boolean supports(Class clazz) {\n        return String.class == clazz;\n    }\n\n    @Override\n    protected Object readInternal(Class aClass, HttpInputMessage httpInputMessage)\n        \n        throws IOException, HttpMessageNotReadableException {\n        Charset charset = this.getContentTypeCharset(httpInputMessage.getHeaders().getContentType());\n        return StreamUtils.copyToString(httpInputMessage.getBody(), charset);\n    }\n\n    @Override\n    protected void writeInternal(Object o, HttpOutputMessage httpOutputMessage)\n        \n        throws IOException, HttpMessageNotWritableException {\n    }\n\n    private Charset getContentTypeCharset(MediaType contentType) {\n        return contentType != null && contentType.getCharset() != null ?\n            \n            contentType.getCharset() : this.getDefaultCharset();\n    }\n\n}\n')),(0,i.kt)("h2",{id:"4-\u5b9e\u73b0oauth2accesstokenresponseclient"},"4 \u5b9e\u73b0OAuth2AccessTokenResponseClient"),(0,i.kt)("p",null,"OAuth2AccessTokenResponseClient\u8d1f\u8d23\u4f7f\u7528code\u4ea4\u6362access_token\u7684\u5177\u4f53\u903b\u8f91\u3002\u9ed8\u8ba4\u63d0\u4f9b\u7684\u5b9e\u73b0\u7c7bNimbusAuthorizationCodeTokenResponseClient\u7528\u4e8e\u5904\u7406\u6807\u51c6\u7684OAuth2\u4ea4\u6362access_token\u903b\u8f91\uff0c\u4f46QQ\u63d0\u4f9b\u7684\u65b9\u5f0f\u5e76\u4e0d\u6807\u51c6\uff0c\u6240\u4ee5\u9700\u8981\u81ea\u5b9a\u4e49\u5b9e\u73b0OAuth2AccessTokenResponseClient\u63a5\u53e3\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'package com.yishuifengxiao.common.social.qq;\n\nimport com.yishuifengxiao.common.social.util.TextHtmlHttpMessageConverter;\nimport org.springframework.security.oauth2.client.endpoint.OAuth2AccessTokenResponseClient;\nimport org.springframework.security.oauth2.client.endpoint.OAuth2AuthorizationCodeGrantRequest;\nimport org.springframework.security.oauth2.client.registration.ClientRegistration;\nimport org.springframework.security.oauth2.core.OAuth2AccessToken;\nimport org.springframework.security.oauth2.core.OAuth2AuthenticationException;\nimport org.springframework.security.oauth2.core.endpoint.OAuth2AccessTokenResponse;\nimport org.springframework.security.oauth2.core.endpoint.OAuth2AuthorizationExchange;\nimport org.springframework.util.LinkedMultiValueMap;\nimport org.springframework.util.MultiValueMap;\nimport org.springframework.web.client.RestTemplate;\n\nimport java.util.LinkedHashMap;\nimport java.util.LinkedHashSet;\nimport java.util.Map;\nimport java.util.Set;\n\n/**\n * OAuth2AccessTokenResponseClient\u8d1f\u8d23\u4f7f\u7528code\u4ea4\u6362access_token\u7684\u5177\u4f53\u903b\u8f91\u3002\n * \u9ed8\u8ba4\u63d0\u4f9b\u7684\u5b9e\u73b0\u7c7bNimbusAuthorizationCodeTokenResponseClient\u7528\u4e8e\u5904\u7406\u6807\u51c6\u7684OAuth2\u4ea4\u6362access_token\u903b\u8f91\uff0c\n * \u4f46QQ\u63d0\u4f9b\u7684\u65b9\u5f0f\u5e76\u4e0d\u6807\u51c6\uff0c\u6240\u4ee5\u9700\u8981\u81ea\u5b9a\u4e49\u5b9e\u73b0OAuth2AccessTokenResponseClient\u63a5\u53e3\uff1a\n * <p>\n * \u4e3b\u8981\u662f\u4f7f\u7528RestTemplate\u8bf7\u6c42\u83b7\u53d6access_token\uff0c\u5e76\u5bf9\u8fd4\u56de\u7684\u7ed3\u679c\u6267\u884c\u81ea\u5b9a\u4e49\u89e3\u6790\uff0c\u6700\u540e\u6784\u5efa\u6210OAuth2AccessTokenResponse\u5bf9\u8c61\u8fd4\u56de\u5373\u53ef\u3002\n */\npublic class QQOAuth2AccessTokenResponseClient implements \n    \n    OAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> {\n\n    private RestTemplate restTemplate;\n\n    private RestTemplate getRestTemplate() {\n        if (restTemplate == null) {\n            restTemplate = new RestTemplate();\n            restTemplate.getMessageConverters().add(new TextHtmlHttpMessageConverter());\n        }\n\n        return restTemplate;\n    }\n\n    @Override\n    public OAuth2AccessTokenResponse getTokenResponse(OAuth2AuthorizationCodeGrantRequest authorizationGrantRequest)\n            throws OAuth2AuthenticationException {\n        ClientRegistration clientRegistration = authorizationGrantRequest.getClientRegistration();\n        OAuth2AuthorizationExchange oAuth2AuthorizationExchange = authorizationGrantRequest.getAuthorizationExchange();\n\n        // \u6839\u636eAPI\u6587\u6863\u83b7\u53d6\u8bf7\u6c42access_token\u53c2\u6570\n        MultiValueMap<String, String> params = new LinkedMultiValueMap<>(5);\n        params.set("client_id", clientRegistration.getClientId());\n        params.set("client_secret", clientRegistration.getClientSecret());\n        params.set("code", oAuth2AuthorizationExchange.getAuthorizationResponse().getCode());\n        params.set("redirect_uri", oAuth2AuthorizationExchange.getAuthorizationRequest().getRedirectUri());\n        params.set("grant_type", "authorization_code");\n        String tmpTokenResponse = getRestTemplate().postForObject(\n          clientRegistration.getProviderDetails().getTokenUri(), params, String.class);\n\n        // \u4eceAPI\u6587\u6863\u4e2d\u53ef\u4ee5\u8f7b\u6613\u83b7\u77e5\u89e3\u6790accessToken\u7684\u65b9\u5f0f\n        String[] items = tmpTokenResponse.split("&");\n        //http://wiki.connect.qq.com/\u4f7f\u7528authorization_code\u83b7\u53d6access_token\n        //access_token=FE04************************CCE2&expires_in=7776000&refresh_token=88E4************************BE14\n        String accessToken = items[0].substring(items[0].lastIndexOf("=") + 1);\n        Long expiresIn = Long.parseLong(items[1].substring(items[1].lastIndexOf("=") + 1));\n\n        Set<String> scopes = new LinkedHashSet<>(oAuth2AuthorizationExchange.getAuthorizationRequest().getScopes());\n        Map<String, Object> additionalParameters = new LinkedHashMap<>();\n        OAuth2AccessToken.TokenType accessTokenType = OAuth2AccessToken.TokenType.BEARER;\n\n        return OAuth2AccessTokenResponse.withToken(accessToken)\n                .tokenType(accessTokenType)\n                .expiresIn(expiresIn)\n                .scopes(scopes)\n                .additionalParameters(additionalParameters)\n                .build();\n    }\n}\n')),(0,i.kt)("p",null,"\u4e3b\u8981\u662f\u4f7f\u7528RestTemplate\u8bf7\u6c42\u83b7\u53d6access_token\uff0c\u5e76\u5bf9\u8fd4\u56de\u7684\u7ed3\u679c\u6267\u884c\u81ea\u5b9a\u4e49\u89e3\u6790\uff0c\u6700\u540e\u6784\u5efa\u6210OAuth2AccessTokenResponse\u5bf9\u8c61\u8fd4\u56de\u5373\u53ef\u3002"),(0,i.kt)("h2",{id:"5-\u5b9e\u73b0oauth2userservice\u63a5\u53e3"},"5 \u5b9e\u73b0OAuth2UserService\u63a5\u53e3"),(0,i.kt)("p",null,"OAuth2UserService\u8d1f\u8d23\u8bf7\u6c42\u7528\u6237\u4fe1\u606f\uff08OAuth2User\uff09\uff0c\u6807\u51c6\u7684OAuth2\u534f\u8bae\u53ef\u4ee5\u76f4\u63a5\u643a\u5e26access_token\u8bf7\u6c42\u7528\u6237\u4fe1\u606f\uff0c\u4f46QQ\u8fd8\u9700\u8981\u83b7\u53d6\u5230OpenId\u624d\u80fd\u4f7f\u7528\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'package com.yishuifengxiao.common.social.qq;\n\nimport com.yishuifengxiao.common.social.util.JacksonFromTextHtmlHttpMessageConverter;\nimport org.springframework.security.oauth2.client.userinfo.OAuth2UserRequest;\nimport org.springframework.security.oauth2.client.userinfo.OAuth2UserService;\nimport org.springframework.security.oauth2.core.OAuth2AuthenticationException;\nimport org.springframework.security.oauth2.core.user.OAuth2User;\nimport org.springframework.web.client.RestTemplate;\n\n/**\n * OAuth2UserService\u8d1f\u8d23\u8bf7\u6c42\u7528\u6237\u4fe1\u606f\uff08OAuth2User\uff09\uff0c\n * \u6807\u51c6\u7684OAuth2\u534f\u8bae\u53ef\u4ee5\u76f4\u63a5\u643a\u5e26access_token\u8bf7\u6c42\u7528\u6237\u4fe1\u606f\uff0c\n * \u4f46QQ\u8fd8\u9700\u8981\u83b7\u53d6\u5230OpenId\u624d\u80fd\u4f7f\u7528\uff1a\n * \u9996\u5148\u83b7\u53d6OpenId\uff0c\u518d\u901a\u8fc7OpenId\u7b49\u53c2\u6570\u83b7\u53d6\u7528\u6237\u4fe1\u606f\uff0c\n * \u6700\u7ec8\u7ec4\u88c5\u6210QQUserInfo\u5bf9\u8c61\u3002\n */\npublic class QQOAuth2UserService implements OAuth2UserService<OAuth2UserRequest, OAuth2User> {\n    // \u83b7\u53d6\u7528\u6237\u4fe1\u606f\u7684API\n    private static final String QQ_URL_GET_USER_INFO = \n        "https://graph.qq.com/user/get_user_info?\n        oauth_consumer_key={appId}\n        &openid={openId}&access_token={access_token}";\n\n    private RestTemplate restTemplate;\n\n    private RestTemplate getRestTemplate() {\n        if (restTemplate == null) {\n            restTemplate = new RestTemplate();\n            //\u901a\u8fc7Jackson JSON processing library\u76f4\u63a5\u5c06\u8fd4\u56de\u503c\u7ed1\u5b9a\u5230\u5bf9\u8c61\n            restTemplate.getMessageConverters().add(new JacksonFromTextHtmlHttpMessageConverter());\n        }\n\n        return restTemplate;\n    }\n\n    @Override\n    public OAuth2User loadUser(OAuth2UserRequest userRequest) throws OAuth2AuthenticationException {\n        // \u7b2c\u4e00\u6b65\uff1a\u83b7\u53d6openId\u63a5\u53e3\u54cd\u5e94\n        String accessToken = userRequest.getAccessToken().getTokenValue();\n        String openIdUrl = userRequest.getClientRegistration().getProviderDetails()\n            .getUserInfoEndpoint().getUri() + "?access_token={accessToken}";\n        String result = getRestTemplate().getForObject(openIdUrl, String.class, accessToken);\n        // \u63d0\u53d6openId\n        String openId = result.substring(result.lastIndexOf(":\\"") + 2, result.indexOf("\\"}"));\n\n        // \u7b2c\u4e8c\u6b65\uff1a\u83b7\u53d6\u7528\u6237\u4fe1\u606f\n        String appId = userRequest.getClientRegistration().getClientId();\n        QQUserInfo qqUserInfo = getRestTemplate().getForObject(QQ_URL_GET_USER_INFO,\n                                                               QQUserInfo.class, appId, openId, accessToken);\n        // \u4e3a\u7528\u6237\u4fe1\u606f\u7c7b\u8865\u5145openId\n        if (qqUserInfo != null) {\n            qqUserInfo.setOpenId(openId);\n        }\n        return qqUserInfo;\n    }\n}\n\n')),(0,i.kt)("p",null,"\u9996\u5148\u83b7\u53d6OpenId\uff0c\u518d\u901a\u8fc7OpenId\u7b49\u53c2\u6570\u83b7\u53d6\u7528\u6237\u4fe1\u606f\uff0c\u6700\u7ec8\u7ec4\u88c5\u6210QQUserInfo\u5bf9\u8c61\u3002"),(0,i.kt)("h2",{id:"6-\u591a\u4e2aoauth2\u670d\u52a1\u63d0\u4f9b\u5546\u5e76\u5b58"},"6 \u591a\u4e2aOAuth2\u670d\u52a1\u63d0\u4f9b\u5546\u5e76\u5b58"),(0,i.kt)("p",null,"\u5b9e\u73b0\u4e00\u4e2aSocialProvider\u5b9e\u4f8b\uff0c\u5b8c\u6210\u4e0a\u8ff0\u88c5\u914d\uff0c\u5e76\u5c06\u6b64\u5b9e\u4f8b\u6ce8\u5165\u5230spring \u4e0a\u4e0b\u6587\u4e2d\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * QQ \u767b\u5f55\u6d41\u7a0b\u914d\u7f6e.\n * \u76f8\u5bf9\u4e8e\u6807\u51c6\u7684OAuth2\u6388\u6743\u7801\u6a21\u5f0f\uff0cQQ\u63d0\u4f9b\u7684API\u5728\u4ea4\u4e92\u4e0a\u8f83\u4e3a\u6df7\u4e71\uff0c\n * \u5176\u54cd\u5e94\u7c7b\u578b\u4e3atext/html\uff0c\u54cd\u5e94\u5185\u5bb9\u5219\u540c\u65f6\u5b58\u5728\u666e\u901a\u6587\u672c\u3001JSONP\u3001JSON\u5b57\u7b26\u4e32\u7b49\u591a\u79cd\u7c7b\u578b\u3002\n * \u53e6\u5916\uff0cQQ\u63d0\u4f9b\u7684API\u8fd8\u9700\u8981\u5148\u83b7\u53d6OpenId\uff0c\n * \u518d\u4f7f\u7528OpenId\u7ed3\u5408appId\u4e0eaccess_token\u7684\u65b9\u5f0f\u6765\u83b7\u53d6\u7528\u6237\u4fe1\u606f\uff0c\n * \u800c\u4e0d\u662f\u76f4\u63a5\u4f7f\u7528access_token\uff0c\u8fd9\u4e9b\u90fd\u662f\u6211\u4eec\u9700\u8981\u81ea\u5b9a\u4e49\u5b9e\u73b0\u7684\u91cd\u70b9\u5185\u5bb9\u3002\n *\n * @author yishui\n * @version 1.0.0\n * @since 1.0.0\n */\n@Component\npublic class QQSocialProvider implements SocialProvider {\n    private final static String clientRegistrationId = "qq";\n\n    @Override\n    public OAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest> accessTokenResponseClient() {\n        return new QQOAuth2AccessTokenResponseClient();\n    }\n\n    @Override\n    public OAuth2UserService<OAuth2UserRequest, OAuth2User> userService() {\n        return new QQOAuth2UserService();\n    }\n\n    @Override\n    public String clientRegistrationId() {\n        return clientRegistrationId;\n    }\n\n    @Override\n    public Class<? extends OAuth2User> customUserType() {\n        return QQUserInfo.class;\n    }\n}\n\n')),(0,i.kt)("h2",{id:"7-\u9ad8\u7ea7\u914d\u7f6e"},"7 \u9ad8\u7ea7\u914d\u7f6e"),(0,i.kt)("h3",{id:"71-oauth-20-login-page"},"7.1 OAuth 2.0 Login Page"),(0,i.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cOAuth 2.0\u767b\u5f55\u9875\u9762\u7531DefaultLoginPageGeneratingFilter\u81ea\u52a8\u751f\u6210\u3002\u9ed8\u8ba4\u767b\u5f55\u9875\u9762\u663e\u793a\u6bcf\u4e2a\u5df2\u914d\u7f6e\u7684OAuth\u5ba2\u6237\u7aef\u53ca\u5176ClientRegistration.clientName\u4f5c\u4e3a\u94fe\u63a5\uff0c\u8be5\u94fe\u63a5\u80fd\u591f\u542f\u52a8\u6388\u6743\u8bf7\u6c42\uff08\u6216OAuth 2.0\u767b\u5f55\uff09\u3002"),(0,i.kt)("p",null," In order for ",(0,i.kt)("inlineCode",{parentName:"p"},"DefaultLoginPageGeneratingFilter")," to show links for configured OAuth Clients, the registered ",(0,i.kt)("inlineCode",{parentName:"p"},"ClientRegistrationRepository")," needs to also implement ",(0,i.kt)("inlineCode",{parentName:"p"},"Iterable<ClientRegistration>"),". See ",(0,i.kt)("inlineCode",{parentName:"p"},"InMemoryClientRegistrationRepository")," for reference."),(0,i.kt)("p",null," The default redirect URI template is ",(0,i.kt)("inlineCode",{parentName:"p"},"{baseUrl}/login/oauth2/code/{registrationId}"),". The ",(0,i.kt)("strong",{parentName:"p"},"*registrationId","*")," is a unique identifier for the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-security/site/docs/5.5.8/reference/html5/#oauth2Client-client-registration"},"ClientRegistration"),"."),(0,i.kt)("p",null,"\u6bcf\u4e2aOAuth\u5ba2\u6237\u7aef\u7684\u94fe\u63a5\u76ee\u6807\u9ed8\u8ba4\u5982\u4e0b\uff1a"),(0,i.kt)("p",null,"\u9ed8\u8ba4\u7684\u914d\u7f6e\u503c\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"  /oauth2/authorization/{registrationId}")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'OAuth2AuthorizationRequestRedirectFilter.DEFAULT_AUTHORIZATION_REQUEST_BASE_URI + "/{registrationId}"\n')),(0,i.kt)("p",null,"\u4ee5\u4e0b\u884c\u663e\u793a\u4e86\u4e00\u4e2a\u793a\u4f8b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'<a href="/oauth2/authorization/google">Google</a>\n')),(0,i.kt)("p",null,"\u8981\u8986\u76d6\u9ed8\u8ba4\u767b\u5f55\u9875\u9762\uff0c\u8bf7\u914d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"oauth2Login().loginPage() and (optionally) oauth2Login().authorizationEndpoint().baseUri().\n")),(0,i.kt)("p",null,"\u4e0b\u9762\u7684\u5217\u8868\u663e\u793a\u4e86\u4e00\u4e2a\u793a\u4f8b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@EnableWebSecurity\npublic class OAuth2LoginSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n            .oauth2Login(oauth2 -> oauth2\n                ...\n                .authorizationEndpoint(authorization -> authorization\n                    .baseUri("/login/oauth2/authorization")\n                    ...\n                )\n            );\n    }\n}\n')),(0,i.kt)("p",null,"\u8fd9\u91cc\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"authorizationEndpoint().baseUri()"),"\u7684\u914d\u7f6e\u503c\u4e0e\u63a5\u5165\u914d\u7f6e\u4e2d\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"spring.security.oauth2.client.registration.qq.redirect-uri={baseUrl}/oauth2/authorization/{registrationId}")," \u7684\u503c\u76f8\u5173"),(0,i.kt)("p",null,"\u5982\u524d\u6240\u8ff0\uff0c\u914d\u7f6e",(0,i.kt)("inlineCode",{parentName:"p"},"oauth2Login().authorizationEndpoint().baseUri()"),"\u662f\u53ef\u9009\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u9009\u62e9\u81ea\u5b9a\u4e49\u5b83\uff0c\u8bf7\u786e\u4fdd\u6307\u5411\u6bcf\u4e2aOAuth\u5ba2\u6237\u7aef\u7684\u94fe\u63a5\u4e0e",(0,i.kt)("inlineCode",{parentName:"p"},"authorizationEndpoint().baseUri()"),"\u76f8\u5339\u914d"),(0,i.kt)("p",null,"\u4ee5\u4e0b\u884c\u663e\u793a\u4e86\u4e00\u4e2a\u793a\u4f8b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'<a href="/login/oauth2/authorization/google">Google</a>\n')),(0,i.kt)("h3",{id:"72-redirection-endpoint"},"7.2 Redirection Endpoint"),(0,i.kt)("p",null,"\u6388\u6743\u670d\u52a1\u5668\u4f7f\u7528\u91cd\u5b9a\u5411\u7aef\u70b9\u901a\u8fc7\u8d44\u6e90\u6240\u6709\u8005\u7528\u6237\u4ee3\u7406\u5411\u5ba2\u6237\u7aef\u8fd4\u56de\u6388\u6743\u54cd\u5e94\uff08\u5305\u542b\u6388\u6743\u51ed\u636e\uff09\u3002"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"}," OAuth 2.0\u767b\u5f55\u5229\u7528\u6388\u6743\u4ee3\u7801\u6388\u4e88\u3002\u56e0\u6b64\uff0c\u6388\u6743\u51ed\u8bc1\u5c31\u662f\u6388\u6743\u4ee3\u7801\u3002")),(0,i.kt)("p",null,"The default Authorization Response ",(0,i.kt)("inlineCode",{parentName:"p"},"baseUri")," (redirection endpoint) is ",(0,i.kt)("inlineCode",{parentName:"p"},"/login/oauth2/code/"),", which is defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"OAuth2LoginAuthenticationFilter.DEFAULT_FILTER_PROCESSES_URI"),"."),(0,i.kt)("p",null,"\u5982\u679c\u8981\u81ea\u5b9a\u4e49\u6388\u6743\u54cd\u5e94baseUri\uff0c\u8bf7\u6309\u4ee5\u4e0b\u793a\u4f8b\u6240\u793a\u8fdb\u884c\u914d\u7f6e\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@EnableWebSecurity\npublic class OAuth2LoginSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n            .oauth2Login(oauth2 -> oauth2\n                .redirectionEndpoint(redirection -> redirection\n                    .baseUri("/login/oauth2/callback/*")\n                    ...\n                )\n            );\n    }\n}\n')),(0,i.kt)("p",null," You also need to ensure the ",(0,i.kt)("inlineCode",{parentName:"p"},"ClientRegistration.redirectUri")," matches the custom Authorization Response ",(0,i.kt)("inlineCode",{parentName:"p"},"baseUri"),".The following listing shows an example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'return CommonOAuth2Provider.GOOGLE.getBuilder("google")\n    .clientId("google-client-id")\n    .clientSecret("google-client-secret")\n    .redirectUri("{baseUrl}/login/oauth2/callback/{registrationId}")\n    .build();\n')),(0,i.kt)("h2",{id:"8-\u914d\u7f6e\u5c5e\u6027"},"8 \u914d\u7f6e\u5c5e\u6027"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Spring Boot 2.x"),(0,i.kt)("th",{parentName:"tr",align:"left"},"ClientRegistration"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.registration.*[registrationId]*")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"registrationId"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.registration.*[registrationId]*.client-id")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"clientId"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.registration.*[registrationId]*.client-secret")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"clientSecret"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.registration.*[registrationId]*.client-authentication-method")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"clientAuthenticationMethod"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.registration.*[registrationId]*.authorization-grant-type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"authorizationGrantType"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.registration.*[registrationId]*.redirect-uri")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"redirectUri"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.registration.*[registrationId]*.scope")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"scopes"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.registration.*[registrationId]*.client-name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"clientName"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.provider.*[providerId]*.authorization-uri")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"providerDetails.authorizationUri"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.provider.*[providerId]*.token-uri")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"providerDetails.tokenUri"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.provider.*[providerId]*.jwk-set-uri")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"providerDetails.jwkSetUri"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.provider.*[providerId]*.issuer-uri")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"providerDetails.issuerUri"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.provider.*[providerId]*.user-info-uri")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"providerDetails.userInfoEndpoint.uri"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.provider.*[providerId]*.user-info-authentication-method")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"providerDetails.userInfoEndpoint.authenticationMethod"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"spring.security.oauth2.client.provider.*[providerId]*.user-name-attribute")),(0,i.kt)("td",{parentName:"tr",align:"left"},"providerDetails.userInfoEndpoint.userNameAttributeName")))),(0,i.kt)("p",null,"\u901a\u8fc7\u6307\u5b9a",(0,i.kt)("inlineCode",{parentName:"p"},"spring.security.oauth2.client.Provider.[providerId].pissuer-uri"),"\u5c5e\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528OpenID\u8fde\u63a5\u63d0\u4f9b\u7a0b\u5e8f\u7684\u914d\u7f6e\u7aef\u70b9\u6216\u6388\u6743\u670d\u52a1\u5668\u7684\u5143\u6570\u636e\u7aef\u70b9\u7684\u53d1\u73b0\u6765\u521d\u59cb\u914d\u7f6eClientRegistration\u3002"),(0,i.kt)("p",null,"\u66f4\u591a\u95ee\u9898 \u53c2\u89c1 ",(0,i.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-security/site/docs/5.5.8/reference/html5/#oauth2login"},"https://docs.spring.io/spring-security/site/docs/5.5.8/reference/html5/#oauth2login")),(0,i.kt)("h2",{id:"9-\u81ea\u5b9a\u4e49\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u767b\u5f55\u793a\u4f8b"},"9 \u81ea\u5b9a\u4e49\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u767b\u5f55\u793a\u4f8b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"spring:\n  security:\n    oauth2:\n      client:\n        provider:\n          demo:\n            authorization-uri: https://192.168.171.134:8000/oauth2.0/authorize\n            token-uri: https://192.168.171.134:8000/oauth2.0/token\n            user-info-uri: https://192.168.171.134:8000/oauth2.0/me\n            user-name-attribute: nickname\n        registration:\n          demo:\n            authorization-grant-type: authorization_code\n            client-authentication-method: post\n            client-id: custom appId\n            client-name: QQ??\n            client-secret: custom appKey\n            provider: demo\n            redirect-uri: '{baseUrl}/oauth2/authorization/{registrationId}'\n            scope: get_user_info,list_album,upload_pic,do_like\n\n")),(0,i.kt)("p",null,"\u7136\u540e\u8bbf\u95ee http://localhost:8080/oauth2/authorization/demo"))}d.isMDXComponent=!0}}]);